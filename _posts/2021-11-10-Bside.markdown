---
layout: post
title: BSides Ahmedabad CTF 2021
date: 2021-11-10 00:00:00 +0300
description: WU Crypto # Add post description (optional)
img: Bside2021-panel.png # Add image post (optional)
tags: [Crypto, CTF] # add tag
---


# **BSides Ahmedabad CTF 2021**

# **dlppp** (151 pts/39 solves)

**Problem**

> Can you solve DLP?

*task.py*

```
import os
from Crypto.Util.number import getPrime, getRandomNBitInteger

flag = os.getenv("FLAG", "XXXX{sample_flag}").encode()
m = int.from_bytes(flag, 'big')

p = getPrime(512)
y = pow(1 + p, m, p**3)

assert m < p
print(f"p = {hex(p)}")
print(f"y = {hex(y)}")
```

*output.txt*

```
p = 0xa1c8e1e9b2301cb1f5d424ec6d959d7f275e11507b2177d55f3dc1268c9a3164b72832f362975023f09623814f80fe0ffad179d0e51c40b8a1f882d1f5f28e71
y = 0x6fa0fcc8c9c5f695a5709243698d7640c27c45352375919d538137333ab3a2c748cae5e7c1294d6ffc4007476f6fec6421c992f9fe1919b381306300caa2260953e48f2ec0de7b8c6417faa42001a748b1b367f5211095ddd6bf4e681f7e7ad787e0a7f562f6f0307d6a8d7e8d18cd59bd7572f0c4f430f0fd4fc61503b203f3bcd6dd0b0f84bbdbd42126d95b525fe77e4be62c6dbd083dbcaa284b20a9ea6faf9cbaf20dd88b0180417c9021fa1dcb52b2348c4376bd6b9b38a6c860086af
```

**Solve:**

- Theo nhị thức Newton, bây giờ mình gọi p là n nha, mình khai triển (n+1)^3 ra:
![image.png](/assets/img/Bside2021/Newton.png)

![image.png](/assets/img/Bside2021/1.png)
![image.png](/assets/img/Bside2021/2.png)
Gọi:

![image.png](/assets/img/Bside2021/3.png)

=>
![image.png](/assets/img/Bside2021/4.png)

=> 
![image.png](/assets/img/Bside2021/5.png)

=>
![image.png](/assets/img/Bside2021/6.png)


*solve.py*
```
from Crypto.Util.number import *

p = 0xa1c8e1e9b2301cb1f5d424ec6d959d7f275e11507b2177d55f3dc1268c9a3164b72832f362975023f09623814f80fe0ffad179d0e51c40b8a1f882d1f5f28e71
y = 0x6fa0fcc8c9c5f695a5709243698d7640c27c45352375919d538137333ab3a2c748cae5e7c1294d6ffc4007476f6fec6421c992f9fe1919b381306300caa2260953e48f2ec0de7b8c6417faa42001a748b1b367f5211095ddd6bf4e681f7e7ad787e0a7f562f6f0307d6a8d7e8d18cd59bd7572f0c4f430f0fd4fc61503b203f3bcd6dd0b0f84bbdbd42126d95b525fe77e4be62c6dbd083dbcaa284b20a9ea6faf9cbaf20dd88b0180417c9021fa1dcb52b2348c4376bd6b9b38a6c860086af

p = int(p)
y = int(y)

print(long_to_bytes(((y % (pow(p,2))) - 1) //p))
```

> FLAG: Neko{b1n0m1al_th3or3m0o00oo000ooo00000ooooo00000000n}

# **floorsa** (178 pts/27 solves)

**Problem**

> Something about the private key is leaking but with error.

*chall.py*

```
import os
import hashlib
from Crypto.Util.number import getPrime, getRandomNBitInteger
from itertools import product

def floor_sum(n: int, m: int, a: int) -> int:
  """Fast calculation for sum([a * i // m for i in range(n)])
  """
  res, b = 0, 0
  while 0 < n:
    res += n * (n - 1) // 2 * (a // m)
    a %= m
    res += n * (b // m)
    b %= m
    last = a * n + b
    n, m, a, b = last // m, a, m, last % m
  return res

#def floor_sum_tests():
#  for n, m, a in product(range(50), range(1, 50), range(50)):
#    result = floor_sum(n, m, a) 
#    expect = sum([a * i // m for i in range(n)])
#    assert(result == expect)

if __name__ == '__main__':
  #floor_sum_tests()

  flag = os.getenv('FLAG', 'XXXX{sample_flag}').encode()
  flag += hashlib.sha512(flag).digest()
  m = int.from_bytes(flag, 'big')
  assert m.bit_length() < 2048

  p = getPrime(1024)
  q = getPrime(1024)
  n = p * q
  e = 65537
  c = pow(m, e, n)
  s = floor_sum(q, q, p)
****
  print(f"c = {c}")
  print(f"n = {n}")****
  print(f"s = {s}")
```

**Solve:**

**Flow** của chương trình:
- Là 1 chương trình RSA bình thường
- Dữ liệu cho c, n, e, s
- s được tính trong hàm floor_sum()

Ở hàm floor_sum(), ta thấy nó tính toán như thế này:

![image.png](/assets/img/Bside2021/7.png) với i chạy từ 0 đến n-1

$a^2$


